<?xml version="1.0" encoding="UTF-8"?>
<mapping-configuration>
<property  supportCover="false" supportDelete="false" extend="{'type':2,'params':['ROLE_CODE']}"/>
<sql namespace="GET_MENU_AUTH_TREE_SHOW">
<content name="afa3d5c9-71ac-47e2-9872-3b2b7cc4604a" type="select">
SELECT
	A.ID,
		CASE 
		  WHEN A.MENU_LEVEL = 1 THEN A.MENU_NAME + '_[菜单]'
		  WHEN (A.MENU_LEVEL = 2 AND A.MENU_TYPE = 999) THEN A.MENU_NAME + '_[主页]'
		  WHEN (A.MENU_LEVEL = 2 AND A.MENU_TYPE != 999) THEN A.MENU_NAME + '_[分类]'
		  WHEN (A.MENU_LEVEL = 3 AND A.MENU_TYPE != 999) THEN A.MENU_NAME + '_[主页]'
		 END AS NAME,
	A.MENU_ICON AS ICON,
	A.MENU_CODE AS CODE,
	A.MENU_PARENT_ID AS PID,
	A.MENU_STATUS AS [STATUS],
	A.MENU_LEVEL AS LEVEL,
	CASE 
		WHEN A.MENU_LEVEL = 1 THEN 'root'
		WHEN (A.MENU_LEVEL = 2 AND A.MENU_TYPE = 999) THEN 'child'
		WHEN (A.MENU_LEVEL = 2 AND A.MENU_TYPE != 999) THEN 'category'
		WHEN (A.MENU_LEVEL = 3 AND A.MENU_TYPE != 999) THEN 'child'
	END AS NODE_TYPE,
	CASE 
		WHEN A.MENU_STATUS = 1 THEN '未启用'
		WHEN A.MENU_STATUS = 2 THEN '已启用'
	END AS STATUS_TEXT,
	CASE BB.IS_READ WHEN 'R' THEN 1
	WHEN 'NR' THEN 2 END
	AS AUFU_READ,
	CASE BB.IS_AUTH WHEN 'A' THEN 1
	WHEN 'NA' THEN 2 END
	AS AUFU_AUTH,
	BB.ID AS AUFU_ID
FROM SmartOne2_VC.dbo.SMT_MENU AS A WITH (NOLOCK)
LEFT JOIN 
(
SELECT 
    MAX(ID) AS ID,
    MAX(AUFU_REF_OBJ_ID)as AUFU_REF_OBJ_ID,
    MAX(AUFU_R_ALLOW) as AUFU_R_ALLOW,         /*可读*/
	MAX(AUFU_R_NOT_ALLOW) as AUFU_R_NOT_ALLOW, /*不可读*/
	ISNULL(MAX(R_AUFU_WEIGHT),0) as R_AUFU_WEIGHT,    /* 读权限 值*/
	ISNULL(MAX(R_NOT_AUFU_WEIGHT),0) as R_NOT_AUFU_WEIGHT, /* 不读权限 值*/
	ISNULL(MAX(AUTH_AUFU_WEIGHT),0) as AUTH_AUFU_WEIGHT,    
	ISNULL(MAX(AUTH_NOT_AUFU_WEIGHT),0) as AUTH_NOT_AUFU_WEIGHT, 
	CASE WHEN MAX(AUFU_R_ALLOW) &gt; MAX(AUFU_R_NOT_ALLOW) THEN 'R'
	ELSE 
	CASE WHEN MAX(R_AUFU_WEIGHT) &gt; MAX(R_NOT_AUFU_WEIGHT) THEN 'R'
	ELSE 'NR' END
	END AS IS_READ,
	CASE WHEN MAX(AUFU_AUTH_ALLOW) &gt; MAX(AUFU_R_NOT_ALLOW) THEN 'A'
	ELSE 
	CASE WHEN MAX(R_AUFU_WEIGHT) &gt; MAX(R_NOT_AUFU_WEIGHT) THEN 'A'
	ELSE 'NA' END
	END AS IS_AUTH
 FROM 
(SELECT 
  F.ID,
  F.AUFU_REF_OBJ_ID,
  F.AUFU_R_ALLOW,
  F.AUFU_R_NOT_ALLOW,
  F.AUFU_AUTH_ALLOW,
  F.AUFU_AUTH_NOT_ALLOW,
  CASE AUFU_R_ALLOW WHEN 1 THEN CASE P.AUPE_PERMISSION_TYPE WHEN 'role' THEN 1 WHEN 'user' THEN 3 END END AS R_AUFU_WEIGHT,
  CASE AUFU_R_NOT_ALLOW WHEN 2 THEN CASE P.AUPE_PERMISSION_TYPE WHEN 'role' THEN 1 WHEN 'user' THEN 3 END END AS R_NOT_AUFU_WEIGHT,
  CASE AUFU_AUTH_ALLOW WHEN 1 THEN CASE P.AUPE_PERMISSION_TYPE WHEN 'role' THEN 1 WHEN 'user' THEN 3 END END AS AUTH_AUFU_WEIGHT,
  CASE AUFU_AUTH_NOT_ALLOW WHEN 2 THEN CASE P.AUPE_PERMISSION_TYPE WHEN 'role' THEN 1 WHEN 'user' THEN 3 END END AS AUTH_NOT_AUFU_WEIGHT  
FROM SmartOne2_VC.dbo.SMT_AUTH_MENU F
LEFT JOIN SmartOne2_VC.dbo.SMT_AUTH_PERMISSION P
ON F.AUPE_ID = P.ID
WHERE F.AUPE_ID IN (
   SELECT P.ID 
   FROM SmartOne2_VC.dbo.SMT_AUTH_PERMISSION P
   WHERE AUPE_REF_OBJ_ID IN (
     SELECT lINK.LEFT_VALUE AS ID
     FROM SMT_BASE.dbo.BASE_DATA_REL lINK
     WHERE lINK.RIGHT_VALUE = $ROLE_CODE$ AND lINK.LEFT_TYPE='USER_ID'
     UNION ALL
     SELECT $ROLE_CODE$ AS ID) 
   AND AUPE_AUTH_TYPE = 'menu'
)) B GROUP BY B.AUFU_REF_OBJ_ID
) BB  ON A.ID = BB.AUFU_REF_OBJ_ID
</content>
</sql>
<validators>
<validator name="ROLE_CODE"  enableNotNull="true" enableDataType="true"  /> 
</validators>
</mapping-configuration>