<?xml version="1.0" encoding="UTF-8"?>
<mapping-configuration>
<property  supportCover="false" supportDelete="false" extend="{'type':2,'params':['MENU_CODE','ROLE_CODE']}"/>
<sql namespace="GET_AUTH_PAGE_LIST_SHOW">
<content name="fa7a44c3-60ed-4f33-858f-71a74dcdc1a3" type="select">
SELECT
 B.ID, 
 ' [布局] ' + A.NAME AS NAME,
 A.[VERSION],
 B.PAGE_CODE,
 B.MENU_CODE,
 B.MENU_PAGE_ORDER,
 B.MENU_PAGE_ENABLED,
 CASE B.MENU_PAGE_ENABLED
 WHEN 2 THEN '启用'
 WHEN 1 THEN '禁用'
 END AS MENU_PAGE_ENABLED_TEXT,
 B.PARENT_ID,
 P.AUFU_ID,
 CASE P.IS_READ WHEN 'R' THEN 1 
 WHEN 'NR' THEN 2 END AS AUPA_READ,
 CASE P.IS_AUTH WHEN 'A' THEN 1 
 WHEN 'NA' THEN 2 END AS AUPA_AUTH,
 P.AUPE_ID,
 CASE P.IS_READ
  WHEN 'R' THEN '可见'
  WHEN 'NR' THEN '不可见'
     ELSE '未设置'
  END AS AUPA_READ_TEXT,
 CASE P.IS_AUTH
  WHEN 'A' THEN '可授权'
  WHEN 'NA' THEN '禁止授权'
     ELSE '未设置'
  END AS AUPA_AUTH_TEXT
FROM 
SmartOne2_VC.dbo.SMT_SETTING_LAYOUT AS A WITH (NOLOCK)
INNER JOIN
SmartOne2_VC.dbo.SMT_MENU_PAGE_REL AS B WITH (NOLOCK)
ON A.PAGE_CODE = B.PAGE_CODE
LEFT JOIN(
 SELECT 
 MAX(AUPE_ID) AS AUPE_ID,
 MAX(AUFU_ID) AS AUFU_ID,
    MAX(MENU_ID) as MENU_ID,
    MAX(AUPA_REF_OBJ_ID)as AUPA_REF_OBJ_ID,
    MAX(AUPA_R_ALLOW) AS AUPA_R_ALLOW,         /*可读*/
 MAX(AUPA_R_NOT_ALLOW) AS AUPA_R_NOT_ALLOW, /*不可读*/
 MAX(AUPA_AUTH_ALLOW) AS AUPA_AUTH_ALLOW, 
 MAX(AUPA_AUTH_NOT_ALLOW) AS AUPA_AUTH_NOT_ALLOW,
 ISNULL(MAX(R_AUPA_WEIGHT),0) AS R_AUPA_WEIGHT,    /* 读权限 值*/
 ISNULL(MAX(R_NOT_AUPA_WEIGHT),0) AS R_NOT_AUPA_WEIGHT, /* 不读权限 值*/
 ISNULL(MAX(AUTH_AUPA_WEIGHT),0) AS AUTH_AUPA_WEIGHT,    /* 读权限 值*/
 ISNULL(MAX(AUTH_NOT_AUPA_WEIGHT),0) AS AUTH_NOT_AUPA_WEIGHT, /* 不读权限 值*/
 CASE WHEN MAX(AUPA_R_ALLOW) &gt; MAX(AUPA_R_NOT_ALLOW) THEN 'R'
 ELSE 
 CASE WHEN MAX(R_AUPA_WEIGHT) &gt; MAX(R_NOT_AUPA_WEIGHT) THEN 'R'
 ELSE 'NR' END
 END AS IS_READ,
 CASE WHEN MAX(AUPA_AUTH_ALLOW) &gt; MAX(AUPA_AUTH_NOT_ALLOW) THEN 'A'
 ELSE 
 CASE WHEN MAX(AUTH_AUPA_WEIGHT) &gt; MAX(AUTH_NOT_AUPA_WEIGHT) THEN 'A'
 ELSE 'NA' END
 END AS IS_AUTH
 FROM  
 (
 SELECT 
   A.AUPE_ID,
   f.ID AS AUFU_ID,
   a.MENU_ID, /* 授权菜单id*/
   p.AUPE_REF_OBJ_ID AS '关联角色',
   p.AUPE_PERMISSION_TYPE AS '承载主体',
   p.AUPE_AUTH_TYPE AS '因子分类',
   CASE AUPA_R_ALLOW WHEN 1 THEN AUPA_WEIGHT  END AS R_AUPA_WEIGHT,
   CASE AUPA_R_NOT_ALLOW WHEN 2 THEN AUPA_WEIGHT  END AS R_NOT_AUPA_WEIGHT,
   CASE AUPA_AUTH_ALLOW WHEN 1 THEN AUPA_WEIGHT  END AS AUTH_AUPA_WEIGHT,
   CASE AUPA_AUTH_NOT_ALLOW WHEN 2 THEN AUPA_WEIGHT  END AS AUTH_NOT_AUPA_WEIGHT,
   a.AUPA_REF_OBJ_ID,
   a.AUPA_R_ALLOW,
   a.AUPA_R_NOT_ALLOW,
   a.AUPA_AUTH_ALLOW,
   a.AUPA_AUTH_NOT_ALLOW,
   a.AUPA_WEIGHT
   FROM SmartOne2_VC.dbo.SMT_AUTH_PAGE  a
   left join SmartOne2_VC.dbo.SMT_AUTH_PERMISSION  p ON p.ID = a.AUPE_ID and P.AUPE_AUTH_TYPE = 'menu'
   left join SmartOne2_VC.dbo.SMT_AUTH_MENU f ON
    a.AUPE_ID = f.AUPE_ID  and f.AUFU_REF_OBJ_ID = a.MENU_ID
   WHERE a.MENU_ID = (SELECT ID FROM SmartOne2_VC.dbo.SMT_MENU WHERE MENU_CODE = $MENU_CODE$)  and P.AUPE_REF_OBJ_ID IN (
       SELECT 
       lINK.LEFT_VALUE AS ID
       FROM SMT_BASE.dbo.BASE_DATA_REL lINK
       WHERE lINK.RIGHT_VALUE= $ROLE_CODE$ AND lINK.RIGHT_TYPE= $ROLE_CODE$
	   UNION ALL
       SELECT $ROLE_CODE$ AS ID
 )) BB GROUP BY BB.MENU_ID
) AS P
ON P.AUPA_REF_OBJ_ID = B.ID AND B.PARENT_ID IS NULL
WHERE B.MENU_CODE = $MENU_CODE$
</content>
</sql>
<validators>
<validator name="MENU_CODE"  enableNotNull="true" enableDataType="true"  /> 
<validator name="ROLE_CODE"  enableNotNull="true" enableDataType="true"  /> 
</validators>
</mapping-configuration>